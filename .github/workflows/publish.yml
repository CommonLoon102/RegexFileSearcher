name: Publish Release

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: Windows,
            os: windows-latest,
            project: Wpf,
            runtime: win-x86,
            framework: net5.0-windows,
            build_type: Release,
            is_single_file: "false"
          }
        - {
            name: Linux,
            os: ubuntu-latest,
            project: Gtk,
            runtime: linux-x64,
            framework: net5.0,
            build_type: Release,
            is_single_file: "true"
          }
        - {
            name: macOS,
            os: macos-latest,
            project: Mac,
            runtime: osx-x64,
            framework: net5.0,
            build_type: Release,
            is_single_file: "true"
          }

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 5.0.x
         
      # This cheap hack is needed because of a build environment "bug": https://github.com/actions/setup-dotnet/issues/155
      - name: Clean
        run: dotnet clean && dotnet nuget locals all --clear

      - name: Publish
        run: dotnet publish RegexFileSearcher/RegexFileSearcher.${{ matrix.config.project }}/RegexFileSearcher.${{ matrix.config.project }}.csproj --configuration ${{ matrix.config.build_type }} --output publish --self-contained true -p:PublishSingleFile=${{ matrix.config.is_single_file }} --runtime ${{ matrix.config.runtime }} --framework ${{ matrix.config.framework }}

      - uses: actions/upload-artifact@v2
        with:
            path: publish
            name: ${{ matrix.config.name }} ${{ matrix.config.build_type }}

      - name: List Build Directory
        if: always()
        shell: bash
        run: |
          git status
          ls -lR publish

      - name: Create Package
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
            if [[ "${{ runner.os }}" == 'Windows' ]]; then
              7z a RegexFileSearcher-${{ matrix.config.runtime }}.zip ./publish/*
            else
              zip --junk-paths RegexFileSearcher-${{ matrix.config.runtime }} ./publish/*
            fi

      - name: Create Release
        id: create_release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
            tag_name: 1.2.1-${{ matrix.config.runtime }}-autobuild-2021-apr-18-002
            release_name: RegexFileSearcher 1.2.1 ${{ matrix.config.runtime }}
            body: |
                RegexFileSearcher 1.2.1 built on GitHub servers.
            draft: false
            prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./RegexFileSearcher-${{ matrix.config.runtime }}.zip
            asset_name: RegexFileSearcher-${{ matrix.config.runtime }}.zip
            asset_content_type: application/zip
