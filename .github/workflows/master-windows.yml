# This is a basic workflow to help you get started with Actions

name: win-x86

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2      
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 5.0.x
         
      # This cheap hack is needed because of a build environment "bug": https://github.com/actions/setup-dotnet/issues/155
      - name: Clean
        run: dotnet clean && dotnet nuget locals all --clear
        
      # Hack part 2
      - name: Add NuGet source
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
          
      - name: Publish
        run: dotnet publish RegexFileSearcher/RegexFileSearcher.Wpf/RegexFileSearcher.Wpf.csproj --configuration Release --output publish --self-contained true -p:PublishSingleFile=true --runtime win-x86 --framework net5.0-windows
        
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: publish/
